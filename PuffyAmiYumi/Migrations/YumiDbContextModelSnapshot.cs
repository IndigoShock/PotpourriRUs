// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PuffyAmiYumi.Data;

namespace PuffyAmiYumi.Migrations
{
    [DbContext(typeof(YumiDbContext))]
    partial class YumiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PuffyAmiYumi.Models.Cart", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserTag");

                    b.HasKey("ID");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("PuffyAmiYumi.Models.CartItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CartID");

                    b.Property<decimal>("Price");

                    b.Property<int>("ProductID");

                    b.Property<string>("ProductIMG");

                    b.Property<string>("ProductName");

                    b.Property<int>("Quantity");

                    b.HasKey("ID");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("PuffyAmiYumi.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Business");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("CreditCard");

                    b.Property<string>("Date");

                    b.Property<string>("Email");

                    b.Property<string>("Expire");

                    b.Property<string>("FullName");

                    b.Property<string>("NameOnCard");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("SecurityCode");

                    b.Property<string>("State");

                    b.Property<string>("Street");

                    b.Property<decimal>("Total");

                    b.Property<int>("UserID");

                    b.Property<string>("Zip");

                    b.HasKey("ID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PuffyAmiYumi.Models.OrderItems", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ItemID");

                    b.Property<string>("ItemName");

                    b.Property<int>("OrderID");

                    b.Property<decimal>("Price");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("TotalCost");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("PuffyAmiYumi.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageURL");

                    b.Property<decimal>("Price");

                    b.Property<string>("ProductName");

                    b.Property<string>("SKU");

                    b.Property<int>("Stock");

                    b.HasKey("ID");

                    b.ToTable("Products");

                    b.HasData(
                        new { ID = 1, ImageURL = "asset/Patchouli.jpg", Price = 0.99m, ProductName = "Karma-Patchouli-Potpourri", Stock = 100 },
                        new { ID = 2, ImageURL = "asset/RoseScented.jpg", Price = 1.99m, ProductName = "Karma-Rose-Potpourri", Stock = 100 },
                        new { ID = 3, ImageURL = "asset/VanillaScented.jpg", Price = 1.99m, ProductName = "Karma-Vanilla-Potpourri", Stock = 100 },
                        new { ID = 4, ImageURL = "asset/JasmineScented.jpg", Price = 1.59m, ProductName = "Karma-Jasmine-Potpourri", Stock = 100 },
                        new { ID = 5, ImageURL = "asset/Sandalwood.jpg", Price = 1.15m, ProductName = "Karma-Sandalwood-Potpourri", Stock = 100 },
                        new { ID = 6, ImageURL = "asset/Lavender.jpg", Price = 1.00m, ProductName = "Karma-Lavender-Potpourri", Stock = 100 },
                        new { ID = 7, ImageURL = "asset/SandalwoodSpice.jpg", Price = 1.00m, ProductName = "Esscents-Sandalwood-Spice-Potpourri", Stock = 100 },
                        new { ID = 8, ImageURL = "asset/Geranium.jpg", Price = 1.09m, ProductName = "Esscents-Geranium-Potpourri", Stock = 100 },
                        new { ID = 9, ImageURL = "asset/MorningBlossom.jpg", Price = 0.99m, ProductName = "Esscents-Morning-Blossom-Potpourri", Stock = 100 },
                        new { ID = 10, ImageURL = "asset/JasmineTea.jpg", Price = 0.99m, ProductName = "Esscents-Jasmine-Tea-Potpourri", Stock = 100 }
                    );
                });

            modelBuilder.Entity("PuffyAmiYumi.Models.OrderItems", b =>
                {
                    b.HasOne("PuffyAmiYumi.Models.Order")
                        .WithMany("Products")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
